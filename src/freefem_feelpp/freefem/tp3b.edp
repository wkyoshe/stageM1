//mesh
border bA(t=0,4){x=t;y=0;label=1;}; 
border bB(t=0,2){x=4;y=t;label=2;}; 
border bC(t=0,2){x=4-t;y=2;label=3;}; 
border bD(t=2,4){x=2;y=t;label=4;}; 
border bF(t=2,4){x=4-t;y=4;label=5;};
border bG(t=0,4){x=0;y=4-t;label=6;};
mesh Th = buildmesh ( bA(20) + bB(15) + bC(15) +bD(15) + bF(15) + bG(20));
//plot(Th,wait=1,fill=1);
real f , b1, b2, mu, epsilon; 
f=1;
b1 =1;
b2 =1;
mu =1; 
epsilon;
fespace Vh(Th, P1 ) ; Vh u , v ;
Vh h= hTriangle;
Vh delta;
cout<< " size of mesh"<< h[].max<< endl; delta=1/(1/h + epsilon/(h*h));
problem Problem1(u,v,solver=LU)= int2d(Th)( epsilon*(dx(u)*dx(v) + dy(u)*dy(v)) + b1*dx(u)*v+b2*dy(u)*v + mu*u*v ) - int2d(Th) ( f*v) 
       + int2d(Th) (delta*(-epsilon*(dxx(u)+dyy(u))+b1*dx(u)+b2*dy(u)+mu*u)*((-epsilon*(dxx(v)+dyy(v))+b1*dx(v)+b2*dy(v)+mu*v)))
         + int2d(Th) (delta*(-f)*((-epsilon*(dxx(v)+dyy(v))+b1*dx(v)+b2*dy(v)+mu*v)))
          + on(5,u=1)
          + on(3,4,6,u=0);
epsilon =100; Problem1;
plot(u,fill=1,wait=1,value=0) ;
epsilon =0.001; Problem1;
plot(u,fill=1,wait=1,value=0) ;
//real erreur = 0.0001;
//Th= adaptmesh (Th ,u ,err = erreur ); plot ( Th );
//Problem1;
//plot(u,fill=1,wait=1,value=0) ;
